[React-redux] 방명록 서비스를 만들어보며 배우는 리덕스

오늘은 React 에서 Redux 를 사용하는 방법에 대해서 알아보도록 하겠다.

그러기 위해서는 우선 2가지 기술이 선행되어야 한다.

1. [React와 React-Hooks](https://wonit.tistory.com/category/🦠%20자바스크립트/--%20React.js)
2. [Redux 의 기본 Concept](https://wonit.tistory.com/344?category=822790)

위 내용들을 모른다면 조금 힘들어질 수 있으니 위 링크에서 확인하는 것도 좋은 방법인 것 같다.

### 목차

- redux와 react-redux의 차이
- redux 의 기본 개념
  - 구성 요소
  - Provider
- react-redux 의 Hooks
  - `<Provider/>`
  - `createStore()`
  - `useSelector()`
  - `useDispatch()`
- react-redux 로 todo list 만들기
  - 프로젝트 만들기

# redux와 react-redux의 차이

잘 알다싶이 리덕스는 Vue, Angular, Ember, Vanilla JS 와는 별개로 돌아가는 독립적인 Javascript 라이브러리이다.

리덕스는 다른 프레임워크나 라이브러리에서 쓸 때는 UI 바인딩을 해야되는데, 그게 바로 React에서는 React-Redux 라고 불린다.

react-redux, [공식 홈페이지](https://react-redux.js.org) 에서 자세한 컨셉을 확인할 수 있으니 확인하는 것도 좋은 방법인 것 같다.

# redux의 기본 개념

redux 의 기본 개념과 구성요소에 대해서는 [지난 시간](https://wonit.tistory.com/344?category=822790) 에서 확인할 수 있지만 간단하게 되짚고 넘어가보자.

## 구성 요소

- Provider
- action
  - 순수 js 객체
    - action type
    - action payload
- action Creator
  - action 객체를 반환하는 함수
- Dispatch
  - action 을 리듀서에게 전달한다
- Reducer
  - action 이 (새로운 state를 반환)
- Store
  - 관리하려는 state를 저장하는 곳

## Provider

Provider 는 리덕스의 가장 기본이라고 할 수 있다.

우리는 Redux 를 state 를 관리하고 **Global 하게 사용하기 위해**서 사용하는데, 그러기 위해서는 가장 최상위 컴포넌트에 Provider 컴포넌트를 부모 컴포넌트로 만들어야 한다.

보통 create-react-app 을 통해서 리액트 앱을 만들게 되면 App 컴포넌트가 가장 상위 컴포넌트가 된다.
App 컴포넌트 내부에 있는 컴포넌트들이 store를 사용할 수 있게 하기 위해서 `<Provider />` 로 wrapping 해야 한다.

```js
import React from "react";
import ReactDOM from "react-dom";

import { Provider } from "react-redux";
import store from "./store";

import App from "./App";

const rootElement = document.getElementById("root");
ReactDOM.render(
  <Provider store={store}>
    <App />
  </Provider>,
  rootElement
);
```

보통 React 에서는 `App.js`, Next.js 에서는 `_app.js` 에서 추가해주면 된다.
