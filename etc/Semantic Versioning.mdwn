# Semantic Versioning

- SemVer 이라고 함
  - 버저닝에서 주로 표현되는 방법
- 버전을 `주.부.수` 로 함
  - 주, Major : 기존 버전과 호환되지 않게 API 가 바뀐다면 주 버전이 올라간다
  - 부, Minor : 기존 버전과 호환되면서 새로운 기능을 추가할 떄는 부 버전이 올라간다
  - 수, Patch : 기존 버전과 호환되면서 버그를 수정한 것이라면 수 버전이 올라간다
- 버전은 자연수 형태로 지정함
- 증가하는 순으로 매김

# 다양한 버전

- **릴리즈 단계**
  - GA
    - General Availability
    - 정식 릴리즈 버전으로 안정적인 운영 환경에서 사용할 수 있도록 하는 버전
- **Pre release 단계**
  - M
    - Milestone
    - 테스트 버전. 아직 기능이 픽스되지 않아 구현때마다 테스트 버전이 릴리즈 될 수 있음
    - 기능이 완성되자 마자 공개되는 편
  - RC
    - Release Candidate
    - 릴리즈, 출시 후보
    - 기능이 가능하면 완전하고 안정적이어야 함
    - 정식 배포 전에 테스트하는 버전
- **개발, 테스트 단계**
  - SNAPSHOT
    - nightly 버전
    - 아직 개발단계
    - 백업 시점
