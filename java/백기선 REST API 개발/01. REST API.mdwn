# REST API

REST API는 아래의 두 가지를 꼭 만족해야한다.

- **self-descriptive messages**
  - 메시지 스스로가 스스로에 대한 설명이 가능해야한다.
  - 서버가 변해서 메시지가 변해도 메시지만 보고 해석이 가능해야 한다.
    - 예를 들어 REST API 안에 API 문서의 링크만 함께 넣어도 해당 메시지만 보고 해석이 가능해지므로 self-descriptive 하다고 할 수 있다.
  - 확장 가능한 커뮤니케이션
- **HATEOAS**
  - 하이퍼미디어(링크)를 통해 애플리케이션 상태 변화가 가능해야 한다.
  - 다음 상태로 전의하는 링크를 포함해야한다.
  - 링크 정보를 동적으로 바꿀 수 있다.

#### 강좌에서는 어떻게 REST API를 만족시킬 것인가

Hypertext Application Language 스펙에 따라서 HAL의 링크 데이터에 profile 링크를 추가하는 방식으로 Self-descriptive 와 HATEOAS를 만족시킴

# 프로젝트 만들기

- Web
- JPA
- HATEOAS
- REST Docs
- H2
- PostgreSQL
- Lombok

# API 목록

## GET /api/events

#### 이벤트 목록 조회 (로그인 x)

- 응답 데이터
  - 이벤트 목록
  - 링크
    - self
    - profile
    - get-an-event: 이벤트 하나 조회하는 api
    - next 다음 페이지
    - prev 이전 페이지

#### 이벤트 목록 조회 (로그인 o)

- 응답 데이터
  - 이벤트 목록
  - 링크
    - self
    - profile
    - get-an-event
    - **create-new-event**: 이벤트를 생성할 수 있는 링크
    - next
    - prev

## GET /api/events/{id}

이벤트 하나 조회

## POST /api/events/{id}

이벤트 생성

## PUT /api/events/{id}

이벤트 수정

# HTTP 상태 코드

- 200 OK
- 201 Created
  - 리소스 성공으로 Location 필드에 생성된 리소스에 접근할 수 있도록 URI를 포함해야됨
- 202 Accept
  - 시간이 오래 걸리는 비동기 요청에 대한 응답
- 301 Moved Permanently
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 404 Not Found
- 405 Method Not Allowed
- 500 Internal Server Error
