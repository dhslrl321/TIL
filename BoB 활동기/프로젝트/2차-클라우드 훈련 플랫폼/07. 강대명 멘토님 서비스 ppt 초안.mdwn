# 컨셉

- 우리가 서비스 플로우 설명을 하기 전에 간략하게 우리가 사용하는 네이밍과 고객 분류 및 아키텍쳐 플로우를 설명해드리기 위함

# 필요한 내용

- 현재 회의까지 발전된 서비스 간략 설명
- 용어 정리
  - 사용자
    - 관리자
    - 기관 관리자
    - 기관 사용자
      - 기관 학생
      - 기관 강사
    - 일반 사용자
  - 서비스 구분
    - 훈련 : 우리(V-Ground) 에서 직접 만든 학습용 VM - 유료 컨텐츠
    - 클래스 : 기관 강사가 생성하는 클라우드 기반 실습실
    - 테스트 : 기관 관리자가 생성하는 테스트 실습실
- 사용자 분류 및 권한
  - 관리자
  - 기관 관리자
  - 기관 강사
  - 기관 학생
- 서비스 플로우
  - 회원가입 Flow
  - 클래스 생성 Flow
  - 테스트 생성 Flow

# 말씀드려야할 내용

- 우리는 현재 클래스와 테스트에 집중하고 있어서 훈련은 생각 안 한다.
- 우리의 목표가 10월 중순까지 해당 서비스를 배포하는 것이 목표이다.
  - 10월 중순까지 해당 기능들이 개발될 수 있을지에 대한 가능성을 봐줘라

# 궁금한 내용

- elk 같은 솔루션이 있는데
- 비용적인 측면은 어떻게 책정하는 것이 좋을까?
- 우리는 해당 프로젝트로 그랑프리를 노리고 있고 초반 설계가 중요해보이는데, 효율적인 아키텍처가 무엇일까?
  - 모놀리스 vs 마이크로서비스
  - 만약 부하가 생긴다면 어디서 많이 생길까?
- 학생들이 활동하는 VM 내부에서 각각의 해킹 기법에 대한 로그를 어떻게 쌓을까?
- VNC 프로토콜을 이용해서 GUI를 띄울 때 발생하는 Latency 는 어떻게 해결하면 좋을까?

# 마이크로서비스로 나눈다면

- Service Discovery
- API Gateway
- Microservice
  - User Service
  - VM Service
  - Scoring Service
- Failover : Circuit Breaker
- 통신 : Open Feign

# 내가 해본 Msa 경험

- Spring Cloud Gateway
- Spring Cloud Bus
- Spring Cloud Configuration
- RabbitMQ
- Open Feign

# MSA 학습 경험

- Resilience4J
- Prometheus + Grafana
- Docker
