# 문제

> 해당 포스팅은 백준의 [11726번 2\*n 타일링](https://www.acmicpc.net/problem/11726) 의 접근과 해결 방법을 설명한 글 입니다.  
> 정답 소스 코드를 확인하시려면 [solve url](https://www.acmicpc.net/source/18700073) 에서 확인 가능합니다.

이 문제를 해결하기 위해 **어떤 방식으로 접근**해야 하는지를 먼저 생각해보자.

# 해결법

2 x n의 직사각형을 채워야 하는데, 우리에겐 2가지 타일이 주어진다.

- 1 x 2
- 2 x 1

이런 타일을 가지고 2 x n 크기의 타일을 채워야 한다.

### 접근법

크기가 2 x n 인 타일이 있을 때, 새롭게 타일이 추가되기 위해서는 2가지 방법만 존재한다.

1. `2 x (n-1)` 번째 타일에서 2 x 1 타일이 추가된 경우
2. `2 x (n-2)` 번쨰 타일에서 2 x 2 타일이 추가된 경우

그럼 점화식을 다음과 같이 세울 수 있다.

```
arr[n] = arr[n-1] + arr[n-2];
```

### 정답 코드

```java
import java.io.*;

public class Main {

    static int[] memo = new int[1001];

    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        int n = Integer.parseInt(br.readLine());
        bw.write(String.valueOf(dp(n));
    }
    private static int dp(int n){
        if(n == 1 || n == 0) return 1;
        if(memo[n] > 0) return memo[n];

        memo[n] = dp(n-1) + dp(n-2);
        memo[n] %= 10007;
        return memo[n];
    }
}
```

---

## 문제 회고

DP 문제의 특성을 파악하기 위해서 지금까지는 손으로 처음 부터 n 까지 가면서 특성을 찾을 떄 까지 반복하였다.

지금까지 문제들은 이렇게 잘 풀렸지만 이번 문제는 그렇지 않았다.
이번 문제는 n일 때 어떤 특성을 갖고 있는지를 파악하는 것이 중요했다.
이렇게 스킬 하나가 늘었으니 다음 문제에도 적용해보려 한다.

#### 정답 소스 코드를 확인하시려면 [solve url](https://www.acmicpc.net/source/18700073) 에서 확인 가능합니다.
