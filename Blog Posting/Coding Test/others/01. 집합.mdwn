# 문제

> 해당 포스팅은 백준의 [문제 이름](https://www.acmicpc.net/problem/11723) 의 접근과 해결 방법을 설명한 글 입니다.  
> 정답 소스 코드를 확인하시려면 [solve url](https://www.acmicpc.net/source/30671695) 에서 확인 가능합니다.

이 문제를 해결하기 위해 **어떤 방식으로 접근**해야 하는지를 먼저 생각해보자.

# 문제 접근

이번 문제는 Java의 Set 인터페이스를 이용한다면 쉽게 구현할 수 있는 문제이다.

문제에서 제공되는 연산들이 모두 Set 의 개념과 일치하는 연산들이 대부분이라서 HashSet 을 이용해서 문제를 풀었다.

## 해결법

연산에 따른 메서드를 생성하고 HashSet 연산을 대신 실행시켜주는 방향으로 구현한다

## 정답 코드

```java
import java.io.*;
import java.util.HashSet;
import java.util.Set;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class Main {

    private static Set<Integer> set = new HashSet<>();

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        int loop = Integer.parseInt(br.readLine());

        while(loop-- > 0) {
            String[] operators = br.readLine().split(" ");

            String operator = operators[0];

            if(operators.length != 1) {

                int operand = Integer.parseInt(operators[1]);

                switch(operator) {
                    case "add" :
                        add(operand);
                        break;
                    case "remove":
                        remove(operand);
                        break;
                    case "check":
                        bw.write(check(operand) + "\n");
                        break;
                    case "toggle":
                        toggle(operand);
                        break;
                    default:
                        break;
                }
            }else {
                switch(operator) {
                    case "all":
                        all();
                        break;
                    case "empty":
                        empty();
                        break;
                    default:
                        break;
                }
            }
        }

        bw.flush();
        bw.close();
    }

    private static void add(int value) {
        set.add(value);
    }

    private static void remove(int value) {
        if(set.contains(value)) set.remove(value);
    }

    private static int check(int value) {
        if(set.contains(value)) return 1;
        else return 0;
    }

    private static void toggle(int value) {
        if(set.contains(value)) {
            remove(value);
        }else {
            add(value);
        }
    }

    private static void all() {
        IntStream.range(1, 21).forEach(i -> add(i));
    }

    private static void empty() {
        set.clear();
    }
}
```

---

## 문제 회고

> 회고

#### 정답 소스 코드를 확인하시려면 [solve url](https://www.acmicpc.net/source/30671695) 에서 확인 가능합니다.
