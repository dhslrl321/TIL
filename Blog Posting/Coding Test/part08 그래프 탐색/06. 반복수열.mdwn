# 문제

> 해당 포스팅은 백준의 [2331번 반복 수열](https://www.acmicpc.net/problem/2331) 의 접근과 해결 방법을 설명한 글 입니다.  
> 정답 소스 코드를 확인하시려면 [solve url](https://www.acmicpc.net/source/26128096) 에서 확인 가능합니다.

이 문제를 해결하기 위해 **어떤 방식으로 접근**해야 하는지를 먼저 생각해보자.

# 해결법

우선 문제에서 주어진 조건들을 이해해보자.

- `D[1] = A`
- `D[n] = D[n-1]의 각 자리 숫자를 P번 곱한 수의 합`

두 번째 조건을 보면 우선 **각 숫자 자리**를 구해야 한다는 느낌이 온다.

각 자리 숫자는 **나머지와 나눗셈**을 이용해서 간단하게 구할 수 있다.

그리고 만약 이를 구해 하나의 수열을 만들었다고 해보자.

그리고 이 문제를 그래프로 풀려면 **각 수들을 노드**로 봐야 한다.

현재 수는 **이전 수에 연결**된 노드이며, 다음 수는 현재 노드에서 연결할 노드라고 보면 아래와 같은 형태가 된다.

[그림]()

이제 우리는 DFS를 통해서 탐색을 할 것인데, 만약

## 접근법

## 오답 후보

## 정답 코드

```java
public class Main {
  public static void main(String[] args) throws IOException{
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

    bw.flush();
    bw.close();
  }
}
```

---

## 문제 회고

> 그래프 탐색에 대해서 학습한지 얼마 되지 않은 시점에 이 **반복 수열**문제는 나에게 매우 신선했다.
> 우선 dfs의 개념을 응용한다면 꼭 그래프가 아닌 문제에서도 해결될 수 있음을 알게 되었다.
> 물론 이번 문제는 DFS 개념을 이용했다기보다 **재귀 호출**을 이용했다가 더 맞겠다.
> 하지만 사용하는 형태는 DFS와 비슷했기 때문에 DFS로 해결했다고 생각한다.

#### 정답 소스 코드를 확인하시려면 [solve url](https://www.acmicpc.net/source/26128096) 에서 확인 가능합니다.
