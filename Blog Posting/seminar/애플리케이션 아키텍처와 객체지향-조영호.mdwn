# 애플리케이션 아키텍처와 객체지향

- **아키텍처 란?**
  - 프로젝트에 참여하는 개발자들이 설계에 대해 공유하는 이해를 반영하는 과정
  - A라는 기능과 B라는 기능이 있을 때, 공유하고 싶어하는 부분을 모아서 공유
  - 주관적임
  - 변경하기 어려움
  - 일찍, 올바르게 결정해야 함
- **관심사**
  - 책임
  - 레이어드 아키텍쳐
    - 유사한 관심사를 레이어로 나눠서 수직적으로 배열함
    - 유연하고 재사용이 높아짐
    - 3 가지 레이어가 존재
      - Presentation : 화면, 조작, 사용자의 입력을 모아놓은 레이어
      - Domain : 비즈니스와 관련된 도메인 _가장 중요_
      - Data Source
- **도메인 레이어를 설계하는 방법**
  - 절차 지향 vs 객체 지향
    - Transaction Script Pattern vs Domain Model Pattern
    - 우리나라 대부분의 코드는 객체 지향 언어를 씀에도 불구하고 절차 지향적으로 감
    - 하지만 우리는 Domain Model 을 지향해야 함
- **영화 예메 도메인**
  - `Movie` : 영화
  - `Showing` : 상영
  - `Discount` : 할인 정책
    - `AmountDiscount` : 특정한 절대 금액을 빼줌
    - `PercentDiscount` : 퍼센트로 비율을 빼줌
  - `Rule` : 할인 규칙
    - `SequenceRule` : 조조 상영인 경우
    - `TimeRule` : 어느 시간대에 상영하는 영화
  - `movie 1 - 0..1 discount 1 - 1 .. *`
