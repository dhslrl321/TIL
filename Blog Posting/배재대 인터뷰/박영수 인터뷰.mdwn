- 안녕하세요 선배님! 간단하게 자기소개 한 번 부탁드립니다!
  > 안녕하세요 저는 14년도에 정보보안학과에 학부생으로 입학하여 석사학위 취득까지 총 6년간의 대학생활을 마치고 졸업한 14학번 박영수 입니다.
  > 지금은 회사에 전문연구요원으로 취직해서 개발자로 일하고있습니다.
- 반갑습니다 선배님! 선배님은 현재 어떤 회사에서 어떤 직무를 맡고 계신가요?
  > 현재 회사에서는 '전산장비 괸리 솔루션' 개발 및 유지보수와 '통합 보안 관제 및 자동화' 솔루션 모바일 개발 업무를 담당하는데 간단하게 요약하면 개발자인거죠.
- 개발자라니! 멋있네요. 더 자세히 알 수 있을까요?
  > 웹 페이지나 모바일 애플리케이션에서 사용자에게 눈으로 보여지는 Front-end와 사용자에게 보여지지는 않지만 데이터베이스, 로그인 인증, 인가 등과 같이 서비스의 핵심적인 내부를 담당하는 Back-end인 서버등 다양하게 회사에서 필요한 솔루션들을 개발합니다.
  > Front-end의 웹은 React를 그리고 모바일은 iOS와 Android를 동시에 개발할 수 있는 크로스 플랫폼 라이브러리인 React-Native를 주로 이용하지만 가끔, 컨셉 체크를 위한 프로토티입과 같이 빠르게 개발해야할 때 iOS는 Swift, Android는 Java로 직접 Native 앱을 개발하는 경우도 있습니다. Back-end는 Java를 사용하여 개발을 합니다.
- 정보보안학과에서 소프트웨어 개발자가 되기까지 어떤 공부를 하고 어떤 방식으로 준비를 하셨나요?
  > 학부생때 LOCS라는 연구실에 소속되어 연구실 내 자체 프로젝트나 교수님을 통한 중소기업벤쳐부 과제를 할 때 주로 개발을 많이 했습니다.
  > 그러다 보니 어느샌가 개발자가 되어있네요. 신설학과여서 그런가 물어볼 선배가 없어서 구글, 스택오버플로우 같은곳에서 찾아보면서 공부를 했던걸로 기억합니다.
  > 사람마다 공부하는 방식이 다르지만 저는 책으로 공부하고 그다음 쳐보는게 아닌 먼저 쳐본다음 어떻게 돌아가는건지 파악하는 방식으로 공부했었죠.
  > 혹시 어떻게 공부해야할지 모르겠다는 학생이 있다면 저처럼 먼저 무언가를 만들어보고 그 이후에 깊게 공부하시는 방법을 추천해 드립니다.
  > 눈에 보일 수록 흥미가 잘 떨어지지 않고 오래 공부할 수 있거든요.
- 소프트웨어 개발자만의 장점이 있다면 어떤 것들이 있을까요?
  > 제가 생각하기에 장점은 '재미'라고 생각합니다.
  > 왜냐하면 새로나오는 기술이나 언어같은걸 알아가고 그걸 이용해서 기능을 개발하고 실제로 적용되는걸 보거나, 개발하면서 막혔던 부분이 풀리는 순간 그때 그렇게 재미있더라고요.
  > 그래서 일을 하면서도 '재미'가 느껴지는데, 이게 아마 개발자만의 장점이 아닐까 싶어요.
- 선배님이 지금까지 공부를 하시면서 가장 재밌었거나 기억에 남는 프로젝트가 있을까요?
  > 기억에 남는프로젝트는 중소기업벤쳐부 과제 중 하나인 망분리 솔루션 개발인거 같아요. 그 때 GS인증이라고 소프트웨어 성능 시험을 통과를 했어야 했는데, GS 인증을 준비하며 교수님들과 다른분들의 도움으로 진짜 힘들게 통과했던게 힘들어서인지 유독 기억에 남네요ㅎㅎ
- 선배님이 취업을 함에 있어서 가장 도움이 되었던 활동은 무엇인가요?
  > 아무래도 연구실에서 했던 프로젝트들이 도움이 되었던것 같아요.
  > 특히 그 중에서도 앞서 말 했던 중소기업벤쳐부 과제인 망분리 솔루션 프로젝트를 수행했던게 가장 도움이 된거같습니다.
  > 해당 과제를 수행하면서 단순히 개발만하는게 아니라 인증시험도 하게됬던 경험이 면접볼때도 좋게 작용했던것 같습니다.
  > 약간 주제를 벗어나긴한 답변인데 연구실에서 진행한 프로젝트가 Android와 iOS개발, web개발 같은 실제 업무에 도움이 되더라고요ㅎㅎ
- 현재 소프트웨어 개발자의 길을 걷고싶어하는 후배가 있다면 어떤 방식으로 준비해야할까요?
  > 일단 막히는 부분이 있으면 구글이랑 스택오버플로우 같은 곳에서 찾아보세요. 거기에는 저와 동일한 고민을 하는 사람이 진짜 많다는 것을 알 수 있어요.
  > 그럼 누군가는 그에 대한 답을 해주고 저는 누군가가 알려준 답을 통해서 막히는 부분들을 해결하곤 했었죠.
  > 이런 식으로 어떤 프로젝트를 하더라도 막히면 구글을 통해서 배우고 막히고를 반복하다 보면 하나의 결과가 나옵니다. 그럼 그 결과를 통해 포트폴리오를 준비하시면 도움이 많이 될 것 같아요.
  > 또한 개발을 할 때는 이론이 중요한 역할을 수행합니다.
  > 이론적인 부분과 실제 개발 역량이 병행이 되면 그게 가장 베스트긴한데, 그게 힘들다면, 제가 추천하는 방식은 일단 부딪혀보세요.
  > 일단 만들어보세요, 이론적으로만 공부하는것과 실제로 만드는거랑은 차이가 생각보다 큽니다.
- 인터뷰를 마치겠습니다. 끝으로 이 글을 볼 후배들에게 해주고싶은 이야기가 있을까요?
  > 음.. 일단 학과에서 배우는게 그때 당시에는 몰랐는데 나중가서보니 되게 연관되거나 쓸모있는게 정말 많아요.
  > 보안 솔루션을 개발할때만 보안이 적용되는게 아니라 그냥 솔루션들을 개발할때도 보안적인 요소가 생각 이상으로 많이 고려되어야 해요.
  > 예를 들면 첨부파일 업로드 같은 단순한 기능에서도 솔루션이 적용되는 범위와 사용자 그룹의 특징에 따라서 단순 확장자 검증만 할것인지 파일의 header와 footer에 있는 signature까지 검증할건지 이런것들처럼요.
  > 쓸데없는 말이 길었네요ㅎㅎ 공부할때는 공부하고, 놀때는 놀고 그렇다고해서 무작정 놀기만 하는건 추천하지 않아요.
  > 결론은 학부생때 단순히 집, 학교 이런식으로 반복하지 마시고 뭐든 할때는 하시면 됩니다.
  > 아 그리고 간단한거라도 좋으니 일단 개발부터 해보세요. 그게 실력 향상에 도움이 될꺼에요.
