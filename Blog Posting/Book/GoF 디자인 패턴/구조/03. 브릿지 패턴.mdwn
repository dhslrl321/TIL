# 브릿지 패턴

- 구현에서 추상을 분리하여, 이들을 독립적으로 다양성을 가질 수 있도록 함
- 기능과 구현에 대해서 두 개를 별도의 클래스로 구현
  - 기능 계층과 구현 계층 분리하기

# 참여 객체

- Abstraction
- RefinedAbstraction
- Implementor
- ConcreteImplementor

# 활용성

- 추상적 개념과 이에 대한 구현 사이의 지속적인 종속 관계를 피하고 싶을 때
  - 런타임에 구현 방법을 선택하거나 구현 내용을 변경하고 싶을 떄
- 추상적 개념과 구현 모두가 독립적으로 서브 클래싱을 통해 확장되어야 할 떄
- 추상적 개념에 대한 구현 내용을 변경하는 것이 다른 관련 프로그램에 영향을 주지 않을 때

# 예시

# 장점

# 단점
