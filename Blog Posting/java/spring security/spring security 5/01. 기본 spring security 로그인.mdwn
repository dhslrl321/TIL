# 기본 로그인

- springboot 만들고 spring security 의존성을 추가하면 특정 컨트롤러로 이동하려고 해도 기본으로 filter가 동작해서 default 로그인 페이지로 보냄
  - `application.yml` 에서 기본 사용자 정보 설정을 할 수 있음

#### application.yml

```yml
spring:
  security:
    user:
      name: root
      password: root
      roles: USER
```

이렇게 해서 접근하면 접근할 수 있음

# 어떤 인증으로 접근했는지 확인하기

- 어떤 인증을 통해서 사용자가 로그인 했는지도 확인할 수 있음
  - Controller 에 추가

```java
@RequestMapping("/auth")
public Authentication auth() {
  return SecurityContextHolder.getContext()
              .getAuthentication();
}
@PreAuthorize("hasAnyAuthority('ROLE_USER')")
@RequestMapping("/user")
public SecurityMessage user() {
    return SecurityMessage.builder()
      .auth(SecurityContextHolder.getContext().getAuthentication())
      .message("User 정보")
      .build();
}

@PreAuthorize("hasAnyAuthority('ROLE_ADMIN')")
@RequestMapping("/admin")
public SecurityMessage admin() {
  return SecurityMessage.builder()
      .auth(SecurityContextHolder.getContext().getAuthentication())
      .message("Admin 정보")
      .build();
}
```

# PreAuthorize

```java
@PreAuthorize
@GetMapping("/url")
public void user() {
  return "hello";
}
```

- 해당 어노테이션이 붙은 컨트롤러의 메서드에 접근하려는 사용자는 인자로 갖고 있는 `hasAuthority("ROLE_ADMIN")` 에 따라서만 접근할 수 있게 한다.
