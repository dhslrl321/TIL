# 레플리카셋 (Replica Set) : 일정 개수의 포드를 유지하는 컨트롤러

- 특징
  - 정해진 수의 동일한 포드가 항상 실행되도록 관리
  - 여러 개의 Application 포드를 안정적으로 여러 개 실행시킬 수 있음
  - 노드 장애 등의 이유로 포드를 사용할 수 없다면 다른 노드에서 포드를 다시 생성
- 우리는 포드를 직접 관리할 필요가 없음
  - 레플리카셋이 우리 대신해서 포드를 관리하기 때문
- 중요한 점은 레플리케셋은 포드를 생성하는게 아니라 포드를 일정 양으로 유지시키는 것이 목적임

# 레플리카셋 yml

```yml
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: my-replicaset-nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-nginx-pods-label
  template:
    metadata:
      name: my-nginx-pod
      labels:
        app: my-nginx-pods-label
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 80
```

- spec.replicas
  - 동일한 포드를 몇 개 유지시킬 것인지 설정
- spec.template
  - 포드를 생성할 때 사용할 템플릿을 정의
  - 어떠한 포드를 어떻게 생성할 것인지를 명시
  - 포드 스펙, 포드 템플릿이라고 함

# 레플리카셋 동작 원리

- 레플리카셋과 포드가 연결된 것 처럼 보이지만 실제로는 연결되지 않음
- 느슨한 연결이 되어 있음
- 라벨 셀럭터를 통해서 느슨한 연결이 유지됨
- 순서
  1. spec.selector.matchLabel 에 정의된 라벨을 통해서 생성해야하는 포드를 찾는다.
  2. 만약 라벨이 일치하는 포드가 존재하지 않는다면 template 에 정의된 포드 스펙에 따라서 포드를 생성한다.
  3. 만약 spec.replicas 에서 정의된 생성해야할 포드의 숫자와 현재 가동중인 포드의 수가 다르면 template 항목의 내용으로 포드를 추가한다.

# 라벨과 라벨 셀렉터

- 라벨
  - 쿠버네티스의 리소스의 부가적인 정보를 표현
  - 서로 다른 오브젝트가 서로를 찾아야 할 때 사용됨
- 라벨 셀럭터
  - 말 그대로 라벨을 셀렉 해서 오브젝트를 식별하여 다른 동작을 할 수 있게 하는 기능

# 레플리카셋은 포드의 생성이 아니라 유지가 목적임

- 만약 기존에 a라는 라벨을 주고 포드를 실행시켰고 레플리카셋에서 a와 동일한 스펙을 이용해서 3개로 유지하려 한다.
- 근데 여기서 a 라는 라벨을 삭제하면?
  - 레플리카셋이 유지하려는 포드의 개수가 1개 적어지므로 레플리카셋이 정의된 포드 수를 유지하기 위해서 하나 더 추가함

# 레플리케이션 컨테이너 vs 레플리카셋

- 레플리케이션 컨테이너는 이전 버전의 쿠버네티스에서 사용한 레플리카셋
- 이제는 deprecated 됨
