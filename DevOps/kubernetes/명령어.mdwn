# 오브젝트 목록 확인하기.

- `kubectl get <오브젝트 이름>`
- 포드 확인하기
  - `kubectl get pods`
  - `kubectl get po`
- 레플리카 셋 확인하기
  - `kubectl get replicaset`
  - `kubectl get rs`
- `-o wide` 옵션으로 출력되는 모든 정보를 표시하기
  - `kubectl get po -o wide`

# 생성하기

- `kubectl apply -f <yml 파일 명.yml>`

# 삭제하기

- yml 파일에 정의된 오브젝트 삭제하기
  - `kubectl delete -f <yml 파일 명.yml>`
- pod 이름으로 오브젝트 삭제하기
  - `kubectl delete pod <포드 이름>`
- replicaset 이름으로 오브젝트 삭제하기
  - `kubectl delete rs <레플리카셋 이름>`
- 모든 리소스, 포드, 레플리카셋 삭제하기
  - `kubectl delete deployment, pod, rs --all`

# 생성된 리소스의 정보 확인하기

- 포드 정보 확인하기
  - `kubectl describe pods <포드 이름>`

# 컨테이너 내부로 접근하기

- 컨테이너 내부에서 it 옵션으로 bash 쉘 유지하기
  - `kubectl exec -it <포드 이름> bash`
- `-c` 옵션을 이용해서 특정 컨테이너에 명령을 수행하게 하는데, 이를 bash 쉘로 유지하기
  - `kubectl exec -it <포드 이름> -c <컨테이너 이름> bash`

# 표준 출력 로그 확인하기

- `kubectl logs <포드 이름>`

# 이미 생성된 리소스의 속성을 삭제 없이 변경하기

- created 된 리소스에 동일하게 실행을 한 번 더 하면 configured로 리소스가 수정됨
- `kubectl apply -f <yml 파일 이름.yml>`
- **추가 요망**
- kubectl edit, patch를 이용함
