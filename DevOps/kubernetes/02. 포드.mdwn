# 포드 : 컨테이너의 기본 단위

- 컨테이너 애플리케이션을 구동하기 위해 꼭 필요한 오브젝트
  - 포드
  - 레플리카셋
  - 서비스
  - 디플로이먼트
- 포드 : 컨테이너 애플리케이션의 기본 단위
  - 도커 엔진에서는 기본 단위가 도커 컨테이너
  - 쿠버네티스에서 기본 단위는 포드
- 쿠버네티스의 기본 단위

# 포드 yml 파일

```yml
apiVersion: v1
kind: Pod
metadata:
  name: my-service-pod
spec:
  containers:
    - name: service-container-name
      images: my-service:v1.0
      ports:
        - containerPort: 80
          protocol: TCP
```

- apiVersion
  - yml 파일에서 정의한 오브젝트의 API 버전을 나타냄
- kind
  - 해당 yml 파일에 존재하는 리소스의 종류를 나타냄
- metadata
  - 주석, 이름, 라벨과 같은 메타데이터를 지정할 수 있음
- spec
  - 리소스를 생성하기 위한 자세한 정보를 입력

# 포드 vs 도커 컨테이너

- 포드가 하는 일은 도커 컨테이너가 하는 일과 동일한데 왜 쿠버네티스틑 포드를 사용하는가
  - 여러 리눅스 네임스페이스를 공유하는 컨테이너들을 추상화된 집합으로 사용하기 위하여
- 도커는 리눅스 네트워크 네임스페이스를 공유하기 위해서 브릿지 네트워크를 구성해서 사용
- 쿠버네티스는 하나의 포드 내에 존재하는 컨테이너들은 같은 리눅스 네임스페이스(네트워크와 같은)를 사용할 수 있음
