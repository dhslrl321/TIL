# 도커 명령어 모음

# 일반적 명령어

`docker ` ==>
`docker -v` ==> 도커 버전 확인

### **rm**

`docker rm` ==> 도커 삭제
`docker rm -f` ==> 실행중인 컨테이너 삭제

### **stop**

`docker stop` ==> 도커 중단.

### **ps**

`docker ps` ==> 도커 프로세스 리스트 확인
`docker ps -a` ==> 도커

# 도커 실행과 생성

### **run**

`docker run` : 도커 실행
`docker run -i -t` ==> 도커를 입출력 모드와 tty 서버로 실행
`docker run -it --[name]` ==> name에 해당하는 이름으로 실행
`docker run -d` ==> 도커를 백그라운드로 실행
`docker run -p` ==> 호스트의 특정 포트와 도커의 포트를 포트포워딩
`docker run -e` ==> 도커 환경 변수 값 등록
`docker run ... -v [host-share-directory:container-share-directory]` ==> 영속성을 위한 도커 볼륨으로 도커가 호스트의 디렉토리를 공유함.
`docker run ... -v [host-dir/fileName:container-dir/fileName]` ==> 영속성을 위한 도커 볼륨으로 도커가 호스트의 단일 파일을 공유함.
`docker run ... --volumns-from [containerName]` ==> `-v` 옵션으로 호스트와 볼륨을 공유한 컨테이너와 연결

### **create**

`docker create` ==> 도커 생성

### **start**

`docker start` ==> 도커 실행

# 도커 이미지

### **image**

`docker images` ==> 도커 엔진에 존재하는 이미지 출력
`docker rmi [OPTION] IMAGE [IMAGE...]` ==> 도커 이미지 삭제

### **rename**

`docker rename` ==> 도커 이미지 이름 변경

# 볼륨

### **create**

`docker volume create` ==> 도커 볼륨을 생성
`docker volume create --name[name]` ==> 도커 볼륨을 name이라는 이름으로 생성

### **run**

`docker volumn run -v [volumeName:containerDir]` ==> 호스트와 볼륨을 공유할 때

### **ls**

`docker volume ls` ==>

### **inspect**

`docker inspect` ==> 도커 볼륨이 어디에 저장되어있는지 확인
`docker inspect --type [name]` ==> name이름의 볼륨을 검색

# 도커 이미지

### **commit**

`docker commit -m "[message]"` ==> 메시지로 컨테이를 커밋하여 이미지 생성
`docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]` ==> 컨테이너를 이미지로 만듦

### **rmi**

`docker rmi [image name]` ==> 도커 이미지 이름으로 삭제

### **save**

`docker save -o [추출 파일명] [이미지 이름]` ==> 이미지 이름을 추출 파일명으로 이미지 추출

### **load**

`docker load -i [추출된 파일명]` ==> 추출된 이미지를 도커 엔진에 생성

### **export**

`docker export -o [추출 파일명] [이미지 이름]` ==> 이미지 이름을 추출 파일명으로 이미지 추출

### **import**

`docker import [로드할 파일명] [추출된 파일명]` ==> 추출된 파일명을 로드할 파일명으로 도커 엔진에 생성

# 도커 허브

### **search**

`docker search` ==> 도커 허브에서 이미지 검색

### **push**

`docker push dockerhun-name/image-name:tag` ===> 이미지 도커 허브로 업로드

### **pull**

`docker pull dockerhun-name/image-name:tag` ==> 이미지를 도커 허브에서 다운

### **tag**

`docker tag [기존 이미지 이름] [도커허브 아이디/새롭게 생성될 이름]` ==> 생성될 이미지 이름에 태그를 붙힘(도커 허브에 올릴 때 필수)
